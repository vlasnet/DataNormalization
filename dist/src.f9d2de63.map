{"version":3,"sources":["..\\node_modules\\normalizr\\dist\\src\\schemas\\ImmutableUtils.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Entity.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Union.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Values.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Array.js","..\\node_modules\\normalizr\\dist\\src\\schemas\\Object.js","..\\node_modules\\normalizr\\dist\\src\\index.js","index.js"],"names":["instructorSchema","schema","Entity","courseSchema","instructors","studentSchema","courses","data","console","log","normalizedData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AK/CA;;AAEA,IAAMA,mBAAmB,IAAIC,kBAAOC,MAAX,CAAkB,aAAlB,CAAzB;AACA,IAAMC,eAAe,IAAIF,kBAAOC,MAAX,CAAkB,SAAlB,EAA6B;AAC9CE,iBAAa,CAACJ,gBAAD;AADiC,CAA7B,CAArB;AJHA,AIMA,IAAMK,gBAAgB,IAAIJ,kBAAOC,MAAX,CAAkB,UAAlB,EAA8B;AJLpD,AIMII,aAAS,CAACH,YAAD;AJLb,AIIoD,CAA9B,CAAtB;AJHA;AACA,AIMA,IAAMI,OAAO,CAAC;AJLd,AIMI,UAAM,WADI;AJJd,AIMI,YAAQ,OAFE;AJHd,AIMI,eAAW,CACP;AJNR,AIOY,cAAM,UADV;AJLR,AIOY,gBAAQ,YAFZ;AJJR,AIOY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EAFW;AJN3B,AIGQ,KADO,EAQJ;AJTX,AIUY,cAAM,UADP;AJRX,AIUY,gBAAQ,IAFT;AJPX,AIUY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,KAA/B,EAFW;AJT3B,AIMW,KARI;AJGf,AINc,CAAD,EAoBV;AJbH,AIcI,UAAM,WADP;AJZH,AIcI,YAAQ,MAFT;AJXH,AIcI,eAAW,CACP;AJdR,AIeY,cAAM,UADV;AJbR,AIeY,gBAAQ,IAFZ;AJZR,AIeY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,KAA/B,EAFW;AJd3B,AIWQ,KADO,EAQJ;AJjBX,AIkBY,cAAM,UADP;AJhBX,AIkBY,gBAAQ,kBAFT;AJfX,AIkBY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,OAA/B,EAFW;AJjB3B,AIcW,KARI;AJLf,AIEG,CApBU,EAwCV;AJrBH,AIsBI,UAAM,WADP;AJpBH,AIsBI,YAAQ,MAFT;AJnBH,AIsBI,eAAW,CACP;AJtBR,AIuBY,cAAM,UADV;AJrBR,AIuBY,gBAAQ,YAFZ;AJpBR,AIuBY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EAFW;AJtB3B,AImBQ,KADO,EAQJ;AJzBX,AI0BY,cAAM,UADP;AJxBX,AI0BY,gBAAQ,kBAFT;AJvBX,AI0BY,uBAAe,CACX,EAAC,MAAM,cAAP,EAAuB,QAAQ,MAA/B,EADW,EAEX,EAAC,MAAM,cAAP,EAAuB,QAAQ,OAA/B,EAFW;AJzB3B,AIsBW,KARI;AJbf,AIUG,CAxCU,CAAb;AJ+BA;AACA,AI8BAC,QAAQC,GAAR,CAAY,4BAAZ;AJ7BA,AI8BAD,QAAQC,GAAR,CAAYF,IAAZ;AJ7BA,AI8BA,IAAMG,iBAAiB,0BAAUH,IAAV,EAAgB,CAACF,aAAD,CAAhB,CAAvB;AJ7BA,AI8BAG,QAAQC,GAAR,CAAY,2BAAZ;AJ7BA,AI8BAD,QAAQC,GAAR,CAAYC,cAAZ;AJ7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"src.f9d2de63.map","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isImmutable = isImmutable;\nexports.denormalizeImmutable = denormalizeImmutable;\n/**\n * Helpers to enable Immutable compatibility *without* bringing in\n * the 'immutable' package as a dependency.\n */\n\n/**\n * Check if an object is immutable by checking if it has a key specific\n * to the immutable library.\n *\n * @param  {any} object\n * @return {bool}\n */\nfunction isImmutable(object) {\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') || // Immutable.Map\n  object._map && object._map.hasOwnProperty('__ownerID') // Immutable.Record\n  ));\n}\n\n/**\n * Denormalize an immutable entity.\n *\n * @param  {Schema} schema\n * @param  {Immutable.Map|Immutable.Record} input\n * @param  {function} unvisit\n * @param  {function} getDenormalizedEntity\n * @return {Immutable.Map|Immutable.Record}\n */\nfunction denormalizeImmutable(schema, input, unvisit) {\n  return Object.keys(schema).reduce(function (object, key) {\n    // Immutable maps cast keys to strings on write so we need to ensure\n    // we're accessing them using string keys.\n    var stringKey = '' + key;\n\n    if (object.has(stringKey)) {\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\n    } else {\n      return object;\n    }\n  }, input);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ImmutableUtils = require('./ImmutableUtils');\n\nvar ImmutableUtils = _interopRequireWildcard(_ImmutableUtils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\n  return function (input) {\n    return ImmutableUtils.isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\n  };\n};\n\nvar EntitySchema = function () {\n  function EntitySchema(key) {\n    var definition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, EntitySchema);\n\n    if (!key || typeof key !== 'string') {\n      throw new Error('Expected a string key for Entity, but found ' + key + '.');\n    }\n\n    var _options$idAttribute = options.idAttribute,\n        idAttribute = _options$idAttribute === undefined ? 'id' : _options$idAttribute,\n        _options$mergeStrateg = options.mergeStrategy,\n        mergeStrategy = _options$mergeStrateg === undefined ? function (entityA, entityB) {\n      return _extends({}, entityA, entityB);\n    } : _options$mergeStrateg,\n        _options$processStrat = options.processStrategy,\n        processStrategy = _options$processStrat === undefined ? function (input) {\n      return _extends({}, input);\n    } : _options$processStrat;\n\n\n    this._key = key;\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\n    this._idAttribute = idAttribute;\n    this._mergeStrategy = mergeStrategy;\n    this._processStrategy = processStrategy;\n    this.define(definition);\n  }\n\n  _createClass(EntitySchema, [{\n    key: 'define',\n    value: function define(definition) {\n      this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n        var schema = definition[key];\n        return _extends({}, entitySchema, _defineProperty({}, key, schema));\n      }, this.schema || {});\n    }\n  }, {\n    key: 'getId',\n    value: function getId(input, parent, key) {\n      return this._getId(input, parent, key);\n    }\n  }, {\n    key: 'merge',\n    value: function merge(entityA, entityB) {\n      return this._mergeStrategy(entityA, entityB);\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(input, parent, key, visit, addEntity) {\n      var _this = this;\n\n      var processedEntity = this._processStrategy(input, parent, key);\n      Object.keys(this.schema).forEach(function (key) {\n        if (processedEntity.hasOwnProperty(key) && _typeof(processedEntity[key]) === 'object') {\n          var schema = _this.schema[key];\n          processedEntity[key] = visit(processedEntity[key], processedEntity, key, schema, addEntity);\n        }\n      });\n\n      addEntity(this, processedEntity, input, parent, key);\n      return this.getId(input, parent, key);\n    }\n  }, {\n    key: 'denormalize',\n    value: function denormalize(entity, unvisit) {\n      var _this2 = this;\n\n      if (ImmutableUtils.isImmutable(entity)) {\n        return ImmutableUtils.denormalizeImmutable(this.schema, entity, unvisit);\n      }\n\n      Object.keys(this.schema).forEach(function (key) {\n        if (entity.hasOwnProperty(key)) {\n          var schema = _this2.schema[key];\n          entity[key] = unvisit(entity[key], schema);\n        }\n      });\n      return entity;\n    }\n  }, {\n    key: 'key',\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: 'idAttribute',\n    get: function get() {\n      return this._idAttribute;\n    }\n  }]);\n\n  return EntitySchema;\n}();\n\nexports.default = EntitySchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ImmutableUtils = require('./ImmutableUtils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PolymorphicSchema = function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    _classCallCheck(this, PolymorphicSchema);\n\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n    this.define(definition);\n  }\n\n  _createClass(PolymorphicSchema, [{\n    key: 'define',\n    value: function define(definition) {\n      this.schema = definition;\n    }\n  }, {\n    key: 'getSchemaAttribute',\n    value: function getSchemaAttribute(input, parent, key) {\n      return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n    }\n  }, {\n    key: 'inferSchema',\n    value: function inferSchema(input, parent, key) {\n      if (this.isSingleSchema) {\n        return this.schema;\n      }\n\n      var attr = this.getSchemaAttribute(input, parent, key);\n      return this.schema[attr];\n    }\n  }, {\n    key: 'normalizeValue',\n    value: function normalizeValue(value, parent, key, visit, addEntity) {\n      var schema = this.inferSchema(value, parent, key);\n      if (!schema) {\n        return value;\n      }\n      var normalizedValue = visit(value, parent, key, schema, addEntity);\n      return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : { id: normalizedValue, schema: this.getSchemaAttribute(value, parent, key) };\n    }\n  }, {\n    key: 'denormalizeValue',\n    value: function denormalizeValue(value, unvisit) {\n      var schemaKey = (0, _ImmutableUtils.isImmutable)(value) ? value.get('schema') : value.schema;\n      if (!this.isSingleSchema && !schemaKey) {\n        return value;\n      }\n      var id = (0, _ImmutableUtils.isImmutable)(value) ? value.get('id') : value.id;\n      var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n      return unvisit(id || value, schema);\n    }\n  }, {\n    key: 'isSingleSchema',\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nexports.default = PolymorphicSchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Polymorphic = require('./Polymorphic');\n\nvar _Polymorphic2 = _interopRequireDefault(_Polymorphic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UnionSchema = function (_PolymorphicSchema) {\n  _inherits(UnionSchema, _PolymorphicSchema);\n\n  function UnionSchema(definition, schemaAttribute) {\n    _classCallCheck(this, UnionSchema);\n\n    if (!schemaAttribute) {\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\n    }\n    return _possibleConstructorReturn(this, (UnionSchema.__proto__ || Object.getPrototypeOf(UnionSchema)).call(this, definition, schemaAttribute));\n  }\n\n  _createClass(UnionSchema, [{\n    key: 'normalize',\n    value: function normalize(input, parent, key, visit, addEntity) {\n      return this.normalizeValue(input, parent, key, visit, addEntity);\n    }\n  }, {\n    key: 'denormalize',\n    value: function denormalize(input, unvisit) {\n      return this.denormalizeValue(input, unvisit);\n    }\n  }]);\n\n  return UnionSchema;\n}(_Polymorphic2.default);\n\nexports.default = UnionSchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Polymorphic = require('./Polymorphic');\n\nvar _Polymorphic2 = _interopRequireDefault(_Polymorphic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ValuesSchema = function (_PolymorphicSchema) {\n  _inherits(ValuesSchema, _PolymorphicSchema);\n\n  function ValuesSchema() {\n    _classCallCheck(this, ValuesSchema);\n\n    return _possibleConstructorReturn(this, (ValuesSchema.__proto__ || Object.getPrototypeOf(ValuesSchema)).apply(this, arguments));\n  }\n\n  _createClass(ValuesSchema, [{\n    key: 'normalize',\n    value: function normalize(input, parent, key, visit, addEntity) {\n      var _this2 = this;\n\n      return Object.keys(input).reduce(function (output, key, index) {\n        var value = input[key];\n        return value !== undefined && value !== null ? _extends({}, output, _defineProperty({}, key, _this2.normalizeValue(value, input, key, visit, addEntity))) : output;\n      }, {});\n    }\n  }, {\n    key: 'denormalize',\n    value: function denormalize(input, unvisit) {\n      var _this3 = this;\n\n      return Object.keys(input).reduce(function (output, key) {\n        var entityOrId = input[key];\n        return _extends({}, output, _defineProperty({}, key, _this3.denormalizeValue(entityOrId, unvisit)));\n      }, {});\n    }\n  }]);\n\n  return ValuesSchema;\n}(_Polymorphic2.default);\n\nexports.default = ValuesSchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.denormalize = exports.normalize = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Polymorphic = require('./Polymorphic');\n\nvar _Polymorphic2 = _interopRequireDefault(_Polymorphic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar validateSchema = function validateSchema(definition) {\n  var isArray = Array.isArray(definition);\n  if (isArray && definition.length > 1) {\n    throw new Error('Expected schema definition to be a single schema, but found ' + definition.length + '.');\n  }\n\n  return definition[0];\n};\n\nvar getValues = function getValues(input) {\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\n    return input[key];\n  });\n};\n\nvar normalize = exports.normalize = function normalize(schema, input, parent, key, visit, addEntity) {\n  schema = validateSchema(schema);\n\n  var values = getValues(input);\n\n  // Special case: Arrays pass *their* parent on to their children, since there\n  // is not any special information that can be gathered from themselves directly\n  return values.map(function (value, index) {\n    return visit(value, parent, key, schema, addEntity);\n  });\n};\n\nvar denormalize = exports.denormalize = function denormalize(schema, input, unvisit) {\n  schema = validateSchema(schema);\n  return input && input.map ? input.map(function (entityOrId) {\n    return unvisit(entityOrId, schema);\n  }) : input;\n};\n\nvar ArraySchema = function (_PolymorphicSchema) {\n  _inherits(ArraySchema, _PolymorphicSchema);\n\n  function ArraySchema() {\n    _classCallCheck(this, ArraySchema);\n\n    return _possibleConstructorReturn(this, (ArraySchema.__proto__ || Object.getPrototypeOf(ArraySchema)).apply(this, arguments));\n  }\n\n  _createClass(ArraySchema, [{\n    key: 'normalize',\n    value: function normalize(input, parent, key, visit, addEntity) {\n      var _this2 = this;\n\n      var values = getValues(input);\n\n      return values.map(function (value, index) {\n        return _this2.normalizeValue(value, parent, key, visit, addEntity);\n      }).filter(function (value) {\n        return value !== undefined && value !== null;\n      });\n    }\n  }, {\n    key: 'denormalize',\n    value: function denormalize(input, unvisit) {\n      var _this3 = this;\n\n      return input && input.map ? input.map(function (value) {\n        return _this3.denormalizeValue(value, unvisit);\n      }) : input;\n    }\n  }]);\n\n  return ArraySchema;\n}(_Polymorphic2.default);\n\nexports.default = ArraySchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.denormalize = exports.normalize = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _ImmutableUtils = require('./ImmutableUtils');\n\nvar ImmutableUtils = _interopRequireWildcard(_ImmutableUtils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _normalize = function _normalize(schema, input, parent, key, visit, addEntity) {\n  var object = _extends({}, input);\n  Object.keys(schema).forEach(function (key) {\n    var localSchema = schema[key];\n    var value = visit(input[key], input, key, localSchema, addEntity);\n    if (value === undefined || value === null) {\n      delete object[key];\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n};\n\nexports.normalize = _normalize;\nvar _denormalize = function _denormalize(schema, input, unvisit) {\n  if (ImmutableUtils.isImmutable(input)) {\n    return ImmutableUtils.denormalizeImmutable(schema, input, unvisit);\n  }\n\n  var object = _extends({}, input);\n  Object.keys(schema).forEach(function (key) {\n    if (object[key]) {\n      object[key] = unvisit(object[key], schema[key]);\n    }\n  });\n  return object;\n};\n\nexports.denormalize = _denormalize;\n\nvar ObjectSchema = function () {\n  function ObjectSchema(definition) {\n    _classCallCheck(this, ObjectSchema);\n\n    this.define(definition);\n  }\n\n  _createClass(ObjectSchema, [{\n    key: 'define',\n    value: function define(definition) {\n      this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n        var schema = definition[key];\n        return _extends({}, entitySchema, _defineProperty({}, key, schema));\n      }, this.schema || {});\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _normalize.apply(undefined, [this.schema].concat(args));\n    }\n  }, {\n    key: 'denormalize',\n    value: function denormalize() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _denormalize.apply(undefined, [this.schema].concat(args));\n    }\n  }]);\n\n  return ObjectSchema;\n}();\n\nexports.default = ObjectSchema;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.denormalize = exports.normalize = exports.schema = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _Entity = require('./schemas/Entity');\n\nvar _Entity2 = _interopRequireDefault(_Entity);\n\nvar _Union = require('./schemas/Union');\n\nvar _Union2 = _interopRequireDefault(_Union);\n\nvar _Values = require('./schemas/Values');\n\nvar _Values2 = _interopRequireDefault(_Values);\n\nvar _Array = require('./schemas/Array');\n\nvar ArrayUtils = _interopRequireWildcard(_Array);\n\nvar _Object = require('./schemas/Object');\n\nvar ObjectUtils = _interopRequireWildcard(_Object);\n\nvar _ImmutableUtils = require('./schemas/ImmutableUtils');\n\nvar ImmutableUtils = _interopRequireWildcard(_ImmutableUtils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar visit = function visit(value, parent, key, schema, addEntity) {\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || !value) {\n    return value;\n  }\n\n  if ((typeof schema === 'undefined' ? 'undefined' : _typeof(schema)) === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\n    var method = Array.isArray(schema) ? ArrayUtils.normalize : ObjectUtils.normalize;\n    return method(schema, value, parent, key, visit, addEntity);\n  }\n\n  return schema.normalize(value, parent, key, visit, addEntity);\n};\n\nvar addEntities = function addEntities(entities) {\n  return function (schema, processedEntity, value, parent, key) {\n    var schemaKey = schema.key;\n    var id = schema.getId(value, parent, key);\n    if (!(schemaKey in entities)) {\n      entities[schemaKey] = {};\n    }\n\n    var existingEntity = entities[schemaKey][id];\n    if (existingEntity) {\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\n    } else {\n      entities[schemaKey][id] = processedEntity;\n    }\n  };\n};\n\nvar schema = exports.schema = {\n  Array: ArrayUtils.default,\n  Entity: _Entity2.default,\n  Object: ObjectUtils.default,\n  Union: _Union2.default,\n  Values: _Values2.default\n};\n\nvar normalize = exports.normalize = function normalize(input, schema) {\n  if (!input || (typeof input === 'undefined' ? 'undefined' : _typeof(input)) !== 'object') {\n    throw new Error('Unexpected input given to normalize. Expected type to be \"object\", found \"' + (typeof input === 'undefined' ? 'undefined' : _typeof(input)) + '\".');\n  }\n\n  var entities = {};\n  var addEntity = addEntities(entities);\n\n  var result = visit(input, input, null, schema, addEntity);\n  return { entities: entities, result: result };\n};\n\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\n  var entity = getEntity(id, schema);\n  if ((typeof entity === 'undefined' ? 'undefined' : _typeof(entity)) !== 'object' || entity === null) {\n    return entity;\n  }\n\n  if (!cache[schema.key]) {\n    cache[schema.key] = {};\n  }\n\n  if (!cache[schema.key][id]) {\n    // Ensure we don't mutate it non-immutable objects\n    var entityCopy = ImmutableUtils.isImmutable(entity) ? entity : _extends({}, entity);\n\n    // Need to set this first so that if it is referenced further within the\n    // denormalization the reference will already exist.\n    cache[schema.key][id] = entityCopy;\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\n  }\n\n  return cache[schema.key][id];\n};\n\nvar getUnvisit = function getUnvisit(entities) {\n  var cache = {};\n  var getEntity = getEntities(entities);\n\n  return function unvisit(input, schema) {\n    if ((typeof schema === 'undefined' ? 'undefined' : _typeof(schema)) === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\n      var method = Array.isArray(schema) ? ArrayUtils.denormalize : ObjectUtils.denormalize;\n      return method(schema, input, unvisit);\n    }\n\n    if (input === undefined || input === null) {\n      return input;\n    }\n\n    if (schema instanceof _Entity2.default) {\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\n    }\n\n    return schema.denormalize(input, unvisit);\n  };\n};\n\nvar getEntities = function getEntities(entities) {\n  var isImmutable = ImmutableUtils.isImmutable(entities);\n\n  return function (entityOrId, schema) {\n    var schemaKey = schema.key;\n\n    if ((typeof entityOrId === 'undefined' ? 'undefined' : _typeof(entityOrId)) === 'object') {\n      return entityOrId;\n    }\n\n    return isImmutable ? entities.getIn([schemaKey, entityOrId.toString()]) : entities[schemaKey][entityOrId];\n  };\n};\n\nvar denormalize = exports.denormalize = function denormalize(input, schema, entities) {\n  if (typeof input !== 'undefined') {\n    return getUnvisit(entities)(input, schema);\n  }\n};","import {schema, normalize} from 'normalizr';\n\nconst instructorSchema = new schema.Entity('instructors');\nconst courseSchema = new schema.Entity('courses', {\n    instructors: [instructorSchema]\n});\nconst studentSchema = new schema.Entity('students', {\n    courses: [courseSchema],\n});\n\nconst data = [{\n    \"id\": \"student-1\",\n    \"name\": \"Mango\",\n    \"courses\": [\n        {\n            \"id\": \"course-1\",\n            \"name\": \"Blockchain\",\n            \"instructors\": [\n                {\"id\": \"instructor-1\", \"name\": \"Jack\"},\n                {\"id\": \"instructor-2\", \"name\": \"Ming\"}\n            ]\n        }, {\n            \"id\": \"course-2\",\n            \"name\": \"AI\",\n            \"instructors\": [\n                {\"id\": \"instructor-2\", \"name\": \"Ming\"},\n                {\"id\": \"instructor-3\", \"name\": \"Pam\"}\n            ]\n        }\n    ]\n}, {\n    \"id\": \"student-2\",\n    \"name\": \"Poly\",\n    \"courses\": [\n        {\n            \"id\": \"course-2\",\n            \"name\": \"AI\",\n            \"instructors\": [\n                {\"id\": \"instructor-2\", \"name\": \"Ming\"},\n                {\"id\": \"instructor-3\", \"name\": \"Pam\"}\n            ]\n        }, {\n            \"id\": \"course-3\",\n            \"name\": \"Machine Learning\",\n            \"instructors\": [\n                {\"id\": \"instructor-1\", \"name\": \"Jack\"},\n                {\"id\": \"instructor-4\", \"name\": \"David\"}\n            ]\n        }\n    ]\n}, {\n    \"id\": \"student-3\",\n    \"name\": \"Ajax\",\n    \"courses\": [\n        {\n            \"id\": \"course-1\",\n            \"name\": \"Blockchain\",\n            \"instructors\": [\n                {\"id\": \"instructor-1\", \"name\": \"Jack\"},\n                {\"id\": \"instructor-2\", \"name\": \"Ming\"}\n            ]\n        }, {\n            \"id\": \"course-3\",\n            \"name\": \"Machine Learning\",\n            \"instructors\": [\n                {\"id\": \"instructor-1\", \"name\": \"Jack\"},\n                {\"id\": \"instructor-4\", \"name\": \"David\"}\n            ]\n        }\n    ]\n}];\n\nconsole.log('Data before normalization:')\nconsole.log(data);\nconst normalizedData = normalize(data, [studentSchema]);\nconsole.log('Data after normalization:')\nconsole.log(normalizedData);\n"]}